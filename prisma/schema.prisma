// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id 
  imgUrl String @db.Text

  email String 
  displayName  String
  userName String 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  servers Server[]
  members  Member[]
}

model Server {
  id String @id @default(uuid())

  imgUrl String @db.Text

  name String

  auther   User      @relation(fields: [autherId], references: [id], onDelete: Cascade)
  autherId String
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members    Member[]

  @@index([autherId])
}

enum ChannelType {
  TEXT
  VOICE
  VIDEO
}

model Channel {
  id String @id @default(uuid())
  name String

  type ChannelType @default(TEXT)

  serverId String
  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  messages   Message[]

  @@index([serverId])
}

model Member {
  id String @id @default(uuid())

  autherId String
  auther   User   @relation(fields: [autherId], references: [id], onDelete: Cascade)

  serverId String
  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  messages   Message[]

  @@index([autherId])
  @@index([serverId])
}

model Message {
  id    String @id @default(uuid())
  title String @db.Text

  memberId String
  memeber  Member @relation(fields: [memberId], references: [id], onDelete: Cascade)

  channelId String
  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([memberId])
  @@index([channelId])
}
